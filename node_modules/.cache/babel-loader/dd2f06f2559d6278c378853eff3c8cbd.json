{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\talip\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\movie\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Serachbar from \"./components/Serachbar\";\nimport Movielist from \"./components/Movielist\";\nimport axios from \"axios\";\nimport Addmovie from './components/Addmovie';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Edit from './components/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movies: [],\n      searchQuery: \"\"\n    };\n\n    this.deleteMovie = async movie => {\n      axios.delete(`http://localhost:3002/movies/${movie.id}`);\n      const newMovieList = this.state.movies.filter(m => m.id !== movie.id);\n      this.setState(state => ({\n        movies: newMovieList\n      }));\n      this.getMovies();\n    };\n\n    this.searchMovie = event => {\n      this.setState({\n        searchQuery: event.target.value\n      });\n    };\n\n    this.Addmovie = async movie => {\n      await axios.post(`http://localhost:3002/movies/`, movie);\n      this.setState(state => ({\n        movies: state.movies.concat([movie])\n      }));\n      this.getMovies();\n    };\n\n    this.editMovie = async (id, updateMovie) => {\n      await axios.put(`http://localhost:3002/movies/${id}`, updateMovie);\n      this.getMovies();\n    };\n  }\n\n  // async componentDidMount() {\n  //   const baseURL=\"http://localhost:3002/movies\";\n  //   const response=await fetch(baseURL);\n  //   console.log(response);\n  //   const data= await response.json();\n  //   console.log(data);\n  //   this.setState({movies:data})\n  // }\n  componentDidMount() {\n    this.getMovies();\n  } //---------------\n\n\n  async getMovies() {\n    const response = await axios.get(\"http://localhost:3002/movies\");\n    this.setState({\n      movies: response.data\n    });\n  } // deleteMovie=(movie)=>{\n  //   const newMovieList=this.state.movies.filter(\n  //     m=> m.id !== movie.id\n  //   );\n  //   this.setState(state => ({\n  //     movies:newMovieList\n  //   }))\n  // }\n  /// fetch yapısı\n  // deleteMovie= async (movie)=>{\n  //   const url=`http://localhost:3002/movies/${movie.id}`\n  //   await fetch(url,{\n  //     method:\"DELETE\"\n  //   })\n  //   const newMovieList=this.state.movies.filter(\n  //     m=> m.id !== movie.id\n  //   );\n  //   this.setState(state => ({\n  //     movies:newMovieList\n  //   }))\n  // }\n  /// axios delete\n\n\n  render() {\n    //filtlrme fonskiyonu\n    let filteredMovies = this.state.movies.filter(movie => {\n      return movie.name.toLowerCase().indexOf(this.state.searchQuery.toLowerCase()) !== -1;\n    }).sort((a, b) => {\n      return a.id < b.id ? 1 : -1; // id seçimin terisne döndürür :D\n    });\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add\",\n            exact: true,\n            render: _ref => {\n              let {\n                history\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(Addmovie, {\n                onAddMovie: movie => {\n                  this.Addmovie(movie);\n                  history.push(\"/\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 15\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/edit/:id\",\n            render: props => /*#__PURE__*/_jsxDEV(Edit, { ...props,\n              onEditMovie: (id, movie) => {\n                this.editMovie(id, movie);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            render: () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-12\",\n                  children: /*#__PURE__*/_jsxDEV(Serachbar, {\n                    searchMovieProp: this.searchMovie\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Movielist, {\n                movies: filteredMovies,\n                deleteITem: this.deleteMovie\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/talip/OneDrive/Masaüstü/movie/src/App.js"],"names":["React","Component","Serachbar","Movielist","axios","Addmovie","BrowserRouter","Router","Switch","Route","Edit","App","state","movies","searchQuery","deleteMovie","movie","delete","id","newMovieList","filter","m","setState","getMovies","searchMovie","event","target","value","post","concat","editMovie","updateMovie","put","componentDidMount","response","get","data","render","filteredMovies","name","toLowerCase","indexOf","sort","a","b","history","push","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Serachbar from \"./components/Serachbar\"\nimport Movielist from \"./components/Movielist\"\nimport axios from \"axios\";\nimport Addmovie from './components/Addmovie';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Edit from './components/Edit';\n\n\n\nclass App extends Component {\n  state = {\n    movies: [],\n    searchQuery: \"\"\n  }\n  // async componentDidMount() {\n  //   const baseURL=\"http://localhost:3002/movies\";\n  //   const response=await fetch(baseURL);\n  //   console.log(response);\n  //   const data= await response.json();\n  //   console.log(data);\n  //   this.setState({movies:data})\n  // }\n\n\n  componentDidMount() {\n    this.getMovies();\n\n\n  }\n  //---------------\n  async getMovies() {\n    const response = await axios.get(\"http://localhost:3002/movies\")\n\n    this.setState({ movies: response.data })\n\n\n  }\n\n\n\n  // deleteMovie=(movie)=>{\n  //   const newMovieList=this.state.movies.filter(\n  //     m=> m.id !== movie.id\n\n  //   );\n  //   this.setState(state => ({\n  //     movies:newMovieList\n  //   }))\n  // }\n\n  /// fetch yapısı\n  // deleteMovie= async (movie)=>{\n  //   const url=`http://localhost:3002/movies/${movie.id}`\n  //   await fetch(url,{\n  //     method:\"DELETE\"\n  //   })\n  //   const newMovieList=this.state.movies.filter(\n  //     m=> m.id !== movie.id\n\n  //   );\n  //   this.setState(state => ({\n  //     movies:newMovieList\n  //   }))\n  // }\n\n  /// axios delete\n\n  deleteMovie = async (movie) => {\n    axios.delete(`http://localhost:3002/movies/${movie.id}`)\n    const newMovieList = this.state.movies.filter(\n      m => m.id !== movie.id\n\n    );\n    this.setState(state => ({\n      movies: newMovieList\n    }))\n    this.getMovies();\n  }\n\n\n  // filtrleme\n  searchMovie = (event) => {\n    this.setState({ searchQuery: event.target.value })\n  }\n\n  Addmovie = async (movie) => {\n    await axios.post(`http://localhost:3002/movies/`, movie)\n\n    this.setState(state => ({\n      movies: state.movies.concat([movie])\n    }))\n    this.getMovies();\n  }\n\n  //güncelleme\n  editMovie = async (id, updateMovie) => {\n    await axios.put(`http://localhost:3002/movies/${id}`, updateMovie)\nthis.getMovies();\n\n  }\n  render() {\n    //filtlrme fonskiyonu\n    let filteredMovies = this.state.movies.filter(\n      (movie) => {\n        return movie.name.toLowerCase().indexOf(this.state.searchQuery.toLowerCase()) !== -1\n      }\n    ).sort((a, b) => {\n      return a.id < b.id ? 1 : -1; // id seçimin terisne döndürür :D\n    })\n    return (\n\n\n      <Router>\n        <div className='container'>\n          <Switch>\n\n\n\n            {/* <Route path=\"/edit/:id\" component={Edit} /> */}\n\n            <Route path=\"/add\" exact render={({ history }) => (\n              <Addmovie\n                onAddMovie={(movie) => {\n                  this.Addmovie(movie)\n                  history.push(\"/\");\n                }} />\n            )} />\n\n            <Route path=\"/edit/:id\" render={(props) => (\n              <Edit\n                {...props}\n                onEditMovie={(id, movie) => {\n                  this.editMovie(id, movie);\n\n                }} />\n            )} />\n\n            <Route path=\"/\" render={() => (\n              <React.Fragment>\n                <div className='row'>\n                  <div className='col-12'>\n                    <Serachbar\n                      searchMovieProp={this.searchMovie}\n                    />\n                  </div>\n                </div>\n                <Movielist\n                  movies={filteredMovies}\n                  deleteITem={this.deleteMovie}\n                />\n              </React.Fragment>\n            )} />\n\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}